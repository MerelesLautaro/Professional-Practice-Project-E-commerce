openapi: 3.0.0
info:
  title: E-COMMERCE | Professional Practice Project
  version: 1.0.0
  description: Documentation of the APIs, E-COMMERCE project.
  contact:
    name: Repository
    url: https://github.com/MerelesLautaro/Professional-Practice-Project-E-commerce

paths:
  /api/v1/auth/login:
    post:
      summary: Login user
      description: Authenticate user and return JWT tokens
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: secret123
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6...
                  refreshToken:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6...
        '400':
          description: Missing or invalid credentials

  /api/v1/auth/register:
    post:
      summary: Register user
      description: Register a new user and return JWT tokens
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: newuser@example.com
                phone:
                  type: string
                  example: '3765105002'
                password:
                  type: string
                  example: secret123
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6...
                  refreshToken:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6...
        '400':
          description: Bad request - validation error

  /api/v1/auth/logout:
    post:
      summary: Logout user
      description: Invalidate the JWT token by adding it to the blacklist
      tags:
        - Authentication
      security:
        - bearerAuth: []
      parameters:
        - in: header
          name: Authorization
          description: Bearer JWT token to be invalidated
          required: true
          schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
      responses:
        '204':
          description: Successfully logged out (No Content)
        '400':
          description: Missing or invalid token in Authorization header

  /api/v1/auth/refresh-token:
    post:
      summary: Refresh JWT token
      description: Generate a new access token using a valid refresh token
      tags:
        - Authentication
      security:
        - bearerAuth: []
      parameters:
        - in: header
          name: Authorization
          description: Bearer refresh token
          required: true
          schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
      responses:
        '200':
          description: Token refreshed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6...
                  refreshToken:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6...
        '400':
          description: Missing or invalid refresh token
        '401':
          description: Unauthorized - refresh token expired or invalid

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
